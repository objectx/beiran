pipeline:
  pre-build:
    group: build
    image: docker
    environment:
      - DOCKER_HOST=unix:///var/run/host.sock
    commands:
      - docker build -t dkr.rsnc.io/poc/beiran/beiran:drone-build-${DRONE_BUILD_NUMBER} .
    volumes:
      - /var/run/docker.sock:/var/run/host.sock:ro

  pylint-build:
    group: build
    image: docker
    environment:
      - DOCKER_HOST=unix:///var/run/host.sock
    commands:
      - docker build -t dkr.rsnc.io/poc/beiran/pylint:drone-build-${DRONE_BUILD_NUMBER} -f helpers/docker/pylint/Dockerfile .
    volumes:
      - /var/run/docker.sock:/var/run/host.sock:ro

  lint-daemon:
    image: dkr.rsnc.io/poc/beiran/pylint:drone-build-${DRONE_BUILD_NUMBER}
    group: lint
    commands:
      - pylint beirand

  lint-client:
    image: dkr.rsnc.io/poc/beiran/pylint:drone-build-${DRONE_BUILD_NUMBER}
    group: lint
    commands:
      - pylint beiran

  lint-plugins:
    image: dkr.rsnc.io/poc/beiran/pylint:drone-build-${DRONE_BUILD_NUMBER}
    group: lint
    commands:
      - pylint plugins

  dockerd:
    image: docker:18.03.0-ce-dind
    privileged: true
    detach: true
    command:  [ "-D" ]
    volumes:
      - /tmp/beiran-build-vols/dockerd1-${DRONE_BUILD_NUMBER}:/var/lib/docker

  dockerd1_test_seeds:
    image: docker:18.03.0-ce
    environment:
      - DOCKER_HOST=tcp://dockerd1:2375
    commands: 
      - date
      - |
        echo "waiting until docker is accessible"
        times=0
        until $(wget -q -T 2 -O /dev/null http://dockerd:2375/info); do
            printf '.'
            sleep 3
            times=$(( $times + 1 ))
            if [ $times -eq 10 ]; then
              2>&1 echo "timed out waiting for dockerd"
              exit 1
            fi
        done
      - docker pull hello-world
      - docker pull alpine:latest
      - docker images

  beirand1:
    image: dkr.rsnc.io/poc/beiran/beiran:drone-build-${DRONE_BUILD_NUMBER}
    detach: true
    environment:
      - DISCOVERY_METHOD=none
      - LOG_LEVEL=INFO
      - DOCKER_HOST=tcp://dockerd1:2375
      - LISTEN_ADDR=0.0.0.0
    volumes:
      - /tmp/beiran-build-vols/dockerd1-${DRONE_BUILD_NUMBER}:/var/lib/docker
    commands:
      - date
      - ip addr show
      - python3 -m beirand

  rest_test:
    image: dkr.rsnc.io/poc/beiran/pyresttest
    environment:
      - LOG=True
      - LOG_LEVEL=DEBUG
      - PRINT_BODIES=True
    commands: 
      - date
      - |
        echo "waiting until beirand is accessible"
        times=0
        until $(curl --output /dev/null --silent --fail http://beirand:8888); do
            printf '.'
            sleep 3
            times=$(( $times + 1 ))
            if [ $times -eq 10 ]; then
              2>&1 echo "timed out waiting for beirand"
              exit 1
            fi
        done
      - pyresttest --url http://beirand:8888 --test test/rest_api/beirand.yaml

  publish:
    image: docker
    environment:
      - DOCKER_HOST=unix:///var/run/host.sock
    commands:
      - docker tag dkr.rsnc.io/poc/beiran/beiran:drone-build-${DRONE_BUILD_NUMBER} dkr.rsnc.io/poc/beiran/beiran:edge
      - docker push dkr.rsnc.io/poc/beiran/beiran:edge
    volumes:
      - /var/run/docker.sock:/var/run/host.sock:ro

  notify-rsnc:
    group: notify
    image: plugins/slack
    channel: beiran
    username: drone
    webhook: https://chat.rsnc.io/hooks/jhw1tcrpbpnybez4a3db16i1rw
    icon_url: https://cdn.worldvectorlogo.com/logos/drone.svg
    when:
      status: [ success, failure ]

  notify-cl-slack:
    group: notify
    image: plugins/slack
    channel: beiran_pj
    username: Drone
    webhook: https://hooks.slack.com/services/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
    icon_url: https://cdn.worldvectorlogo.com/logos/drone.svg
    when:
      status: [ success, failure ]

  # Howto stop previously detached beirand and dockerd before this step?

  cleanup:
    image: alpine:3.7
    volumes:
     - /tmp/beiran-build-vols:/tmp/beiran-build-vols
    commands:
     - echo "Cleaning up docker storage"
     - rm -rf /tmp/beiran-build-vols/dockerd1-${DRONE_BUILD_NUMBER}
    when:
      status: [ success, failure ]
