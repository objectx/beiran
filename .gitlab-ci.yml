stages:
 - pre_build
 - checks
 - test
 # - publish
 - cleanup

pre_build:daemon:
  stage: pre_build
  tags:
   - docker
  script:
   - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
   - docker pull $CI_REGISTRY_IMAGE:latest || true
   - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME || true
   - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME,$CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:ci-${CI_PIPELINE_ID} -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
   - docker push $CI_REGISTRY_IMAGE:ci-${CI_PIPELINE_ID}
   - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME}

pre_build:checker:
  stage: pre_build
  tags:
   - docker
  script:
   - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
   - docker pull $CI_REGISTRY_IMAGE/checks:latest || true
   - docker build --cache-from $CI_REGISTRY_IMAGE/checks:latest -t $CI_REGISTRY_IMAGE/checks:ci-${CI_PIPELINE_ID} -t $CI_REGISTRY_IMAGE/checks:latest -f helpers/docker/checks/Dockerfile .
   - docker push $CI_REGISTRY_IMAGE/checks:ci-${CI_PIPELINE_ID}
   - docker push $CI_REGISTRY_IMAGE/checks:latest

checks:lint-daemon:
  stage: checks
  image: $CI_REGISTRY_IMAGE/checks:ci-${CI_PIPELINE_ID}
  tags:
   - docker
  script:
   - pylint beirand

checks:lint-client:
  stage: checks
  image: $CI_REGISTRY_IMAGE/checks:ci-${CI_PIPELINE_ID}
  tags:
   - docker
  script:
   - pylint beiran

checks:lint-plugins:
  stage: checks
  image: $CI_REGISTRY_IMAGE/checks:ci-${CI_PIPELINE_ID}
  tags:
   - docker
  script:
   - pylint plugins

checks:bandit-daemon:
  stage: checks
  image: $CI_REGISTRY_IMAGE/checks:ci-${CI_PIPELINE_ID}
  tags:
   - docker
  script:
   - bandit -r beirand
  allow_failure: true

checks:bandit-client:
  stage: checks
  image: $CI_REGISTRY_IMAGE/checks:ci-${CI_PIPELINE_ID}
  tags:
   - docker
  script:
   - bandit -r beiran
  allow_failure: true

checks:bandit-plugins:
  stage: checks
  image: $CI_REGISTRY_IMAGE/checks:ci-${CI_PIPELINE_ID}
  tags:
   - docker
  script:
   - bandit -r plugins
  allow_failure: true

# FIXME: services are not yet supported by gitlab-ci, as least not as implemented in drone ci

test:unit:
  stage: test
  image: $CI_REGISTRY_IMAGE:ci-${CI_PIPELINE_ID}
  tags:
   - docker
  script:
   - pytest

# cleanup:
#   image: alpine:3.7
#   FIXME: volumes is not supported by gitlab-ci yet
#   volumes:
#    - /tmp/beiran-build-vols:/tmp/beiran-build-vols
#   commands:
#    - echo "Cleaning up docker storage"
#    - export B_DIR=/tmp/beiran-build-vols/dockerd1-${CI_PIPELINE_ID} 
#    - if [ ! -d $B_DIR ]; then exit 0; fi
#    - du -ch -d1 $B_DIR
#    - rm -rf $B_DIR
#   when: always
