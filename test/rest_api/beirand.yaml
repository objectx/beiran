# Beiran Daemon tests
# please see to get help: https://github.com/svanoort/pyresttest/blob/master/advanced_guide.md
---
- config:
  - testset: "Beiran"
  - variable_binds: {test_docker_layer: 'sha256:d1725b59e92d6462c6d688ef028979cc6bb150762db99d18dddc7fa54b82b0ce', test_docker_image: 'hello-world'}

- test:
  - name: "Version from root handler"
  - headers: {accept: 'application/json'}
  - url: "/"
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/json'}
     - compare: {jsonpath_mini: "version",   comparator: "eq",     expected: "0.0.8d"}

- test:
  - name: "Info endpoint"
  - headers: {accept: 'application/json'}
  - url: "/info"
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/json'}
     - compare: {jsonpath_mini: "version",   comparator: "eq",     expected: "0.0.8d"}


- test:
  - name: "List Images"
  - headers: {accept: 'application/json'}
  - url: "/docker/images"
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/json'}


- test:
  - name: "List All Images"
  - headers: {accept: 'application/json'}
  - url: "/docker/images?all=true"
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/json'}

- test:
  - name: "Get Image Information"
  - headers: {accept: 'application/json'}
  - url: {template: "/docker/images/$test_docker_image/info"}
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/json'}

- test:
  - name: "List Layers"
  - headers: {accept: 'application/json'}
  - url: "/docker/layers"
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/json'}

- test:
  - name: "List All Layers"
  - headers: {accept: 'application/json'}
  - url: "/docker/layers?all=true"
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/json'}

- test:
  - name: "Layer Download"
  - headers: {accept: 'application/json'}
  - url: {template: "/docker/layers/$test_docker_layer"}
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/octet-stream'}
     - compare: {header: "Docker-Content-Digest", comparator: contains, expected: {template: "$test_docker_layer"}}
     - compare: {header: "Etag", comparator: contains, expected: {template: "$test_docker_layer"}}
     - compare: {header: "Content-Length", comparator: equals, expected: '10240'}

- test:
  - name: "Layer Download HEAD"
  - headers: {accept: 'application/json'}
  - url: {template: "/docker/layers/$test_docker_layer"}
  - method: "HEAD"
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/octet-stream'}
     - compare: {header: "Docker-Content-Digest", comparator: contains, expected: {template: "$test_docker_layer"}}
     - compare: {header: "Etag", comparator: contains, expected: {template: "$test_docker_layer"}}
     - compare: {header: "Content-Length", comparator: equals, expected: '10240'}

- test:
  - name: "Download or create image config"
  - headers: {accept: 'application/json'}
  - url: {template: "/docker/images/$test_docker_image/config"}
  - expected_status: [200]
  - validators:
     - compare: {header: "content-type", comparator: contains, expected: 'application/json'}
     - compare: {raw_body: "", comparator: "eq", expected: '{"architecture":"amd64","config":{"Hostname":"","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"],"Cmd":["/hello"],"ArgsEscaped":true,"Image":"sha256:9a5813f1116c2426ead0a44bbec252bfc5c3d445402cc1442ce9194fc1397027","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":null},"container":"15c5544a385127276a51553acb81ed24a9429f9f61d6844db1fa34f46348e420","container_config":{"Hostname":"15c5544a3851","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"],"Cmd":["/bin/sh","-c","#(nop) ","CMD [\"/hello\"]"],"ArgsEscaped":true,"Image":"sha256:9a5813f1116c2426ead0a44bbec252bfc5c3d445402cc1442ce9194fc1397027","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":{}},"created":"2018-09-07T19:25:39.809797627Z","docker_version":"17.06.2-ce","history":[{"created":"2018-09-07T19:25:39.611062956Z","created_by":"/bin/sh -c #(nop) COPY file:9824c33ef192ac944822908370af9f04ab049bfa5c10724e4f727206f5167094 in / "},{"created":"2018-09-07T19:25:39.809797627Z","created_by":"/bin/sh -c #(nop)  CMD [\"/hello\"]","empty_layer":true}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:428c97da766c4c13b19088a471de6b622b038f3ae8efa10ec5a37d6d31a2df0b"]}}'}
